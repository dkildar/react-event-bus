{"version":3,"file":"index.modern.js","sources":["../src/core/mitt.context.ts","../src/core/mitt.provider.tsx","../src/hooks/mitt-emit.hook.ts","../src/hooks/mitt-on.hook.ts","../src/hooks/mitt-off.hook.ts","../src/hooks/mitt-clear.hook.ts"],"sourcesContent":["import { createContext } from 'react'\nimport mitt from 'mitt'\n\nexport const MittContext = createContext({ client: mitt() })\n","import React, { PropsWithChildren } from 'react'\nimport { MittContext } from './mitt.context'\nimport mitt from 'mitt'\n\nexport function MittProvider({ children }: PropsWithChildren<unknown>) {\n  return (\n    <MittContext.Provider value={{ client: mitt() }}>\n      {children}\n    </MittContext.Provider>\n  )\n}\n","import { useContext } from 'react'\nimport { MittContext } from '../core'\n\nexport function useMittEmit() {\n  const context = useContext(MittContext)\n\n  return {\n    emit: (key: string, data: unknown) => {\n      context.client.emit(key, data)\n    }\n  }\n}\n","import { useContext, useEffect } from 'react'\nimport { MittContext } from '../core'\nimport { EventType, Handler, WildcardHandler } from 'mitt'\n\nexport function useMittOn<\n  Events extends Record<EventType, unknown>,\n  Key extends keyof Events\n>(key: Key, cb: Handler<Events[Key]>): void\n\nexport function useMittOn(\n  key: '*',\n  cb: WildcardHandler<Record<EventType, unknown>>\n): void\n\nexport function useMittOn(key: any, cb: any) {\n  const context = useContext(MittContext)\n\n  useEffect(() => {\n    context.client.on(key, cb)\n  }, [])\n}\n","import { EventType, Handler, WildcardHandler } from 'mitt'\nimport { useContext, useEffect } from 'react'\nimport { MittContext } from '../core'\n\nexport function useMittOff<\n  Events extends Record<EventType, unknown>,\n  Key extends keyof Events\n>(key: Key, cb: Handler<Events[Key]>): void\n\nexport function useMittOff(\n  key: '*',\n  cb: WildcardHandler<Record<EventType, unknown>>\n): void\n\nexport function useMittOff(key: any, cb: any) {\n  const context = useContext(MittContext)\n\n  useEffect(() => {\n    context.client.on(key, cb)\n  }, [])\n}\n","import { useContext } from 'react'\nimport { MittContext } from '../core'\n\nexport function useMittClear() {\n  const context = useContext(MittContext)\n\n  return {\n    clear: () => context.client.all.clear()\n  }\n}\n"],"names":["MittContext","createContext","client","mitt","MittProvider","_ref","children","React","Provider","value","useMittEmit","context","useContext","emit","key","data","useMittOn","cb","useEffect","on","useMittOff","useMittClear","clear","all"],"mappings":";;;IAGaA,WAAW,GAAGC,aAAa,CAAC;EAAEC,MAAM,EAAEC,IAAI;CAAI;;SCC3CC,YAAYA,CAAAC,IAAA;MAAGC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,OACEC,oBAACP,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEP,MAAM,EAAEC,IAAI;;KACxCG,QAAQ,CACY;AAE3B;;SCPgBI,WAAWA;EACzB,IAAMC,OAAO,GAAGC,UAAU,CAACZ,WAAW,CAAC;EAEvC,OAAO;IACLa,IAAI,EAAE,SAAAA,KAACC,GAAW,EAAEC,IAAa;MAC/BJ,OAAO,CAACT,MAAM,CAACW,IAAI,CAACC,GAAG,EAAEC,IAAI,CAAC;;GAEjC;AACH;;SCGgBC,SAASA,CAACF,GAAQ,EAAEG,EAAO;EACzC,IAAMN,OAAO,GAAGC,UAAU,CAACZ,WAAW,CAAC;EAEvCkB,SAAS,CAAC;IACRP,OAAO,CAACT,MAAM,CAACiB,EAAE,CAACL,GAAG,EAAEG,EAAE,CAAC;GAC3B,EAAE,EAAE,CAAC;AACR;;SCNgBG,UAAUA,CAACN,GAAQ,EAAEG,EAAO;EAC1C,IAAMN,OAAO,GAAGC,UAAU,CAACZ,WAAW,CAAC;EAEvCkB,SAAS,CAAC;IACRP,OAAO,CAACT,MAAM,CAACiB,EAAE,CAACL,GAAG,EAAEG,EAAE,CAAC;GAC3B,EAAE,EAAE,CAAC;AACR;;SCjBgBI,YAAYA;EAC1B,IAAMV,OAAO,GAAGC,UAAU,CAACZ,WAAW,CAAC;EAEvC,OAAO;IACLsB,KAAK,EAAE,SAAAA;MAAA,OAAMX,OAAO,CAACT,MAAM,CAACqB,GAAG,CAACD,KAAK,EAAE;;GACxC;AACH;;;;"}